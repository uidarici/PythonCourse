***Exercise 16: Reading and Writin Files

from sys import argv

script, filename = argv

print(f"We're going to erase {filename}.")
print("If you don't want that, hit CTRL-C (^C).")
print("If you do want that, hit RETURN")

input("?")

print("Opening the file...")
target = open(filename, 'w')

print("Truncating the file. Goodbye!")
target.truncate()

print("Now I'm going to ask you for three lines.")

line1 = input("line 1: ")
line2 = input("line 2: ")
line3 = input("line 3: ")

print("I'm going to write these to the file.")

target.write(line1)
target.write("\n")
target.write(line2)
target.write("\n")
target.write(line3)
target.write("\n")

print("And finally, we close it.")
target.close()

PS C:\Users\udarici19\github> python ex16.py test.txt
We're going to erase test.txt.
If you don't want that, hit CTRL-C (^C).
If you do want that, hit RETURN
?
Opening the file...
Truncating the file. Goodbye!
Now I'm going to ask you for three lines.
line 1: merhaba
line 2: dÃ¼nya
line 3: ilker geldi
I'm going to write these to the file.
And finally, we close it.

***Exercise 17: More Files

Using import is a way to get tons of free code other better (well, usually) programmers have written so you do not have to write it. 

from sys import argv
from os.path import exists

script, from_file, to_file = argv

print(f"Cpoying from {from_file} to {to_file}")

in_file = open(from_file)
indata = in_file.read()

print(f"The input file is {len(indata)} bytes long")

print(f"Does the output file exists? {exists(to_file)}")
print("Ready, hit RETURN to continue, CTRL-C to abort")
input()

out_file = open(to_file, 'w')
out_file.write(indata)

print("Alrigt, all done.")

out_file.close()
in_file.close()

PS C:\Users\udarici19\github> echo "This is a test file." > test.txt
PS C:\Users\udarici19\github> cat test.txt
This is a test file.
PS C:\Users\udarici19\github> python ex17.py test.txt new_file.txt
Cpoying from test.txt to new_file.txt
The input file is 46 bytes long
Does the output file exists? False
Ready, hit RETURN to continue, CTRL-C to abort

Alrigt, all done.

***Exercise 18: Names, Variables, Code, Functions

def print_two(*args):
    arg1, arg2 = args
    print(f"arg1: {arg1}, arg2: {arg2}")

def print_two_again(arg1, arg2):
    print(f"arg1: {arg1}, arg2: {arg2}")

def print_one(arg1):
    print(f"arg1: {arg1}")

def print_none():
    print("I got nothin'.")

print_two("ilker","Darici")
print_two_again("ilker","Darici")
print_one("First!")
print_none()

PS C:\Users\udarici19\github> python ex18.py
arg1: ilker, arg2: Darici
arg1: ilker, arg2: Darici
arg1: First!
I got nothin'.

***Exercise 19: Functions & Variables

def cheese_and_crackers(cheese_count, boxes_of_crackers):
    print(f"You have {cheese_count} cheeses!")
    print(f"You have {boxes_of_crackers} boxes_of_crackers!")
    print("Man that's enough for a party!")
    print("Get a blanket.\n")

print("We can just give the function numbers directly:")
cheese_and_crackers(20,30)

print("OR, we can use variables from our script:")
amount_of_cheese = 10
amount_of_crackers = 50

cheese_and_crackers(amount_of_cheese, amount_of_crackers)

print("We can even do math inside too:")
cheese_and_crackers(10 + 20, 5 + 6)

print("And we can combine the two, variables and math:")
cheese_and_crackers(amount_of_cheese + 100, amount_of_crackers + 87)

PS C:\Users\udarici19\github> python ex19.py
We can just give the function numbers directly:
You have 20 cheeses!
You have 30 boxes_of_crackers!
Man that's enough for a party!
Get a blanket.

OR, we can use variables from our script:
You have 10 cheeses!
You have 50 boxes_of_crackers!
Man that's enough for a party!
Get a blanket.

We can even do math inside too:
You have 30 cheeses!
You have 11 boxes_of_crackers!
Man that's enough for a party!
Get a blanket.

And we can combine the two, variables and math:
You have 110 cheeses!
You have 137 boxes_of_crackers!
Man that's enough for a party!
Get a blanket.

***Exercise 20: Functions and Files

from sys import argv

script, input_file = argv

def print_all(f):
    print(f.read())

def rewind(f):
    f.seek(0)

def print_a_line(line_count, f):
    print(line_count, f.readline())

current_file = open(input_file)
print("First let's print the whole file:\n")

print_all(current_file)

print("Now let's rewind, kind of like a tape.")

rewind(current_file)

print("let's print three lines:")

current_line = 1
print_a_line(current_line, current_file)

current_line = current_line + 1
print_a_line(current_line, current_file)

current_line = current_line + 1
print_a_line(current_line, current_file)

PS C:\Users\udarici19\github> python ex20.py test.txt
First let's print the whole file:

T h i s   i s   a   t e s t   f i l e .



Now let's rewind, kind of like a tape.
let's print three lines:
1 T h i s   i s   a   t e s t   f i l e .

2

3

***Exercise 21: Functions Can Return Something

def add(a, b):
    print(f"ADDING {a} + {b}")
    return a + b

def subtract(a, b):
    print(f"SUBTRACTING {a} - {b}")
    return a - b

def multiply(a, b):
    print(f"MULTIPLYING {a} * {b}")
    return a * b

def divide(a, b):
    print(f"DIVIDING {a} / {b}")
    return a / b

print ("Let's do some mat with just functions!")

age = add(30, 5)
height = subtract(78, 4)
weight = multiply(90, 2)
iq = divide(100,2)

print(f"Age: {age}, Height: {height}, Weight: {weight}, IQ: {iq}")

PS C:\Users\udarici19\github> python ex21.py
Let's do some mat with just functions!
ADDING 30 + 5
SUBTRACTING 78 - 4
MULTIPLYING 90 * 2
DIVIDING 100 / 2
Age: 35, Height: 74, Weight: 180, IQ: 50.0

***Exercise 22: What Do You Know So Far?

***Exercise 23: Strings, Bytes, and Character Encodings




